<?php

/**
* @file
* Módul per a la reserva de recursos d'un Ajuntament o Institució. 
* Desenvolupat per Lluis A. Oliver. 
* www.lluisandreu.com
*/

/**
 * Implements hook_entity_info().
 */
function reserves_entity_info() {

	$info = array();

	$info['reserves_espai'] = array(
		'label' => t('Espai'),
		'base table' => 'reserves_espai',
    //'uri callback' => 'entity_class_uri',
		'entity keys' => array(
			'id' => 'sid',
			'label' => 'title',
		),
    'fieldable' => TRUE,
    'bundles' => array(
      'reserves_espai' => array(
        'label' => t('reserves_espai'),
        'admin' => array(
          'path' => 'admin/structure/espais/manage'
        ),
      ),
    ),
		'module' => 'reserves',
		'entity class' => 'Entity',
		'controller class' => 'ReservesEspaisController',
    'views controller class' => 'EntityDefaultViewsController',
    'view modes' => array(
      'full' => array(
          'label' => t('Default'),
          'custom settings' => FALSE,
        ),
    ),

	);

	return $info;
}

/**
 * Implements hook_permission().
 */
function reserves_permission() {
  return array(
    /*
     *'administer my module' =>  array(
     *  'title' => t('Administer my module'),
     *  'description' => t('Perform administration tasks for my module.'),
     *),
     */
    'view bookable spaces' =>  array(
      'title' => t('Veure espais o recursos reservables'),
      'description' => t('Veure els espais reservables.'),
    ),
    'add bookable spaces' => array(
    	'title' => t('Editar els espais o recursos reservables'),
    	'description' => t('Editar els espais o recursos reservables.'),
    ),
  );
}

/**
 * Implements hook_menu().
 */
function reserves_menu() {

  $items['admin/structure/espais/manage'] = array(
    'title' => 'Espais',
    'page callback' => 'reserves_espai_list',
    'access arguments' => array('view bookable spaces'),
  );

  $items['admin/structure/espais/manage/add'] = array(
    'title' => 'Afegeix un espai nou',
    'page callback' => 'espais_add',
    'access arguments' => array('add bookable spaces'),
    'type' => MENU_LOCAL_ACTION,
  );

  $items['admin/structure/espais/manage/list'] = array(
    'title' => 'Espais',
    'type' => MENU_DEFAULT_LOCAL_TASK,
  );

  $items['espai/%reserves_espai'] = array(
    'title callback' => 'reserves_espai_title',
    'title arguments' => array(1),
    'page callback' => 'reserves_espai_view',
    'page arguments' => array(1),
    'acces arguments' => array('Veure espais o recursos reservables'),
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
  );

  $item['espai/%reserves_espai/view'] = array(
    'title' => t('Veure'),
    'type' => MENU_LOCAL_TASK,
    'weight' => -10,
  );

  $items['admin/structure/espais/%reserves_espai/edit'] = array(
  	'title' => 'Edita un espai o recurs',
  	'page callback' => 'drupal_get_form',
  	'page arguments' => array('reserves_espai_form', 3),
  	'access arguments' => array('add bookable spaces'),
  	'access callback' => TRUE,
    'type' => MENU_LOCAL_TASK,
  );

  $items['admin/structure/espais/%reserves_espai/delete'] = array(
    'title' => 'Elimina aquest espai',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('espai_delete_confirm', 3),
    'access arguments' => array('add bookable spaces'),
    'access callback' => TRUE,
    'type' => MENU_LOCAL_TASK,
  );

  return $items;
}

/**
 * Callback for a page title when this entity is displayed.
 */
function reserves_espai_title($entity) {
  return $entity->title;
}

function espais_info_page() {

	$espais = entity_load('reserves_espai', array(1));

	$list = entity_view('reserves_espai', $espais);
  
	  $output = array();
	  foreach ($list['reserves_espai'] as $espai) {
	    $output[] = drupal_render($espai);
	  }
	  
	  return implode($output);
}

function reserves_espai_list() {

  $markup = array();

  $entities = entity_load("reserves_espai");

  if (!empty($entities)) {
    foreach ($entities as $key => $entity) {
     //dpm($entity);
     $rows[] = array(
        'data' => array(
            'id' => $entity->sid,
            'title' => l($entity->title, 'espai/'.$entity->sid),
            'uid' => $entity->uid,
            'created' => format_date($entity->created, 'medium'),
            'changed' => format_date($entity->changed, 'medium'),
            'edit' => l('Edita', 'admin/structure/espais/'.$entity->sid.'/edit'),
          ),
      );
    }
  }

  $markup['entity_table'] = array(
    '#theme' => 'table',
    '#rows' => $rows,
    '#sticky' => TRUE,
    '#header' => array(
      array('data' => t('ID'), 'field' => 'id', 'sort' => 'asc'),
      array('data' => t('Nom de l\'espai'), 'field' => 'title'),
      array('data' => t('UID'), 'field' => 'uid'),
      array('data' => t('Data creació'), 'field' => 'created'),
      array('data' => t('Data modificació'), 'field' => 'changed'),
      array('data' => t('Accions')),
    ),
  );

  return $markup;

}

function reserves_espai_view($entity, $view_mode = "full") {

  $entity_type = "reserves_espai";
  $entity_id = $entity->sid;

  //
  // Remove previously built content, if exists
  //
  $entity->content = array();

  $entity->title = filter_xss($entity->title);

  //
  // Build the fields content
  //
  field_attach_prepare_view($entity_type, array($entity_id => $entity), $view_mode);
  entity_prepare_view($entity_type, array($entity_id => $entity));
  
  $entity->content += field_attach_view($entity_type, $entity, $view_mode);
 
   // Specify the theme to use and set the #element. Note that the key 
   // you use to pass the entity object must match the key you set in the 
   // variables in my_module_theme(). So in the case below, we use the key 
   // named #element because in my_module_theme() we set the following code:
   //
   // array(
   //   'my_entity' => array(
   //     'variables' => array('element' => null),
   //     'template' => 'my_entity'
   //   ),
   // );
   //
  $entity->content += array(
    '#theme'     => $entity_type,
    '#element'   => $entity,
    '#view_mode' => $view_mode,
    '#language'  => LANGUAGE_NONE,
  );
  
  return $entity->content;
}

/**
 * Implements hook_theme().
 */
function reserves_theme($existing, $type, $theme, $path) {
  return array(
    'reserves_espai' => array(
      'render element' => 'espai',
      'template' => 'templates/reserves-espai',
      'variables' => array('element' => NULL),
    ),
  );
}

function espais_add() {

  $espai = entity_create("reserves_espai", array());
  return drupal_get_form("reserves_espai_form", $espai);

}

/**
 * Implements hook_form().
 */
function reserves_espai_form($form, &$form_state, $entity) {

  //dpm($entity);

  $form_state['espai'] = $entity;

  $form['espai_title'] = array(
    '#type' => 'textfield',
    '#title' => t("Nom de l'espai o recurs reservable"),
    '#required' => TRUE,
    '#default_value' => $entity->title,
  );

  $form['espai_entity'] = array(
    '#type' => 'value',
    '#value' => $entity,
  );

  field_attach_form('reserves_espai', $entity, $form, $form_state);

  $form['submit'] = array(
  	'#type' => 'submit',
  	'#value' => isset($entity) ? t('Crea') : t('Actualitza'),
  	'#weight' => 100,
  );

  $form['delete'] = array(
    '#type' => 'submit',
    '#value' => t('Elimina'),
    '#submit' => array('reserves_espai_delete'),
    '#weight' => 200,
  );

  $form['new_entity'] = array(
    '#type' => 'hidden',
    '#value' => isset($entity->is_new) ? TRUE : FALSE,
  );

  return $form;
}

function reserves_espai_form_submit($form, &$form_state) {
	
	global $user;
  global $language;

  $entity = $form_state['espai'];

  if ($entity->is_new) {
    $entity->uid = $user->uid;
    $entity->language = $language->language;
    $entity->status = 1;
    $entity->created = time();
  }
	
	$entity->title = $form_state['values']['espai_title'];
	$entity->changed = time();

  field_attach_submit('reserves_espai', $entity, $form, $form_state);
	entity_save('reserves_espai', $entity);

	$form_state['redirect'] = 'admin/structure/espais/manage';
	drupal_set_message(t("L'espai " . $entity->title . " ha estat creat"), 'status', TRUE);

}

function reserves_espai_delete($form, &$form_state) {

  $entity = $form_state['espai'];
  $form_state['redirect'] = 'admin/structure/espais/' . $entity->sid . '/delete';

}

function espai_delete_confirm($form, &$form_state, $entity) {

  $form['espai_id'] = array(
    '#type' => 'value',
    '#value' => $entity->sid,
  );
  $question = t('Segur que vols eliminar aquest espai?');
  $path = 'admin/structure/espais/' . $entity->sid;
  return confirm_form($form, $question, $path, t('Aquesta acció no es pot refer'), t("D'acord"), t('Cancela'));

}

function espai_delete_confirm_submit($form, &$form_state) {

  $entity = espai_load($form_state['values']['espai_id']);
  entity_delete("reserves_espai", $entity->sid);

  drupal_set_message(t("L'espai " . $entity->title . " ha estat eliminat"), 'status', TRUE);
  $form_state['redirect'] = 'admin/structure/espais/manage';

}


/* Custom funcions */

/**
 * We save the entity by calling the controller.
 */
function espai_save(&$entity) {
  return entity_get_controller('reserves_espai')->save($entity);
}

/**
 * Use the controller to delete the entity.
 */
function espai_delete($entity) {
  entity_get_controller('reserves_espai')->delete($entity);
}

function espai_load($id) {
  $espais = entity_load('reserves_espai', array($id));
  return $espais[$id];
}

function reserves_espai_load($id = NULL, $reset = FALSE){
  $ids = (isset ($id) ? array($id) : array());
  $espais = espais_load_multiple($ids, $reset);
  return $espais ? reset ($espais) : FALSE;
}
 
function espais_load_multiple($ids = array(), $conditions = array(), $reset = FALSE){
  return entity_load('reserves_espai', $ids, $conditions, $reset);
}

